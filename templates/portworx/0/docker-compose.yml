portworx:
  labels:
    io.rancher.container.create_agent: 'true'
    io.rancher.scheduler.global: 'true'
    io.rancher.container.pull_image: 'always'
  image: portworx/px-dev:1.2.9
  container_name: px
  ipc: host
  net: host
  privileged: true
  environment:
    CLUSTER_ID: ${cluster_id}
    KVDB: ${kvdb}
    HDR_DIR: ${header_dir}
    USE_DISKS: ${use_disks}
  volumes:
     - /dev:/dev
     - ${header_dir}:${header_dir}
     - /run/docker/plugins:/run/docker/plugins
     - /var/lib/osd:/var/lib/osd:shared
     - /etc/pwx:/etc/pwx
     - /opt/pwx/bin:/export_bin:shared
     - /var/run/docker.sock:/var/run/docker.sock
     - /var/cores:/var/cores
  command: -c ${cluster_id} -k etcd://etcd:2379 ${use_disks}
  depends_on:
      - etcd
etcd:
  image: rancher/etcd:v2.3.0
  labels:
    io.rancher.sidekicks: data
    # try not to schedule etcd nodes on the same host
    io.rancher.scheduler.affinity:container_label_soft_ne: etcd=node
    etcd: node
  expose:
    - "2379"
    - "2380"
  environment:
    ETCDCTL_ENDPOINT: http://etcd:2379
  volumes_from:
    - data
# containerize data volume to enable restarts and upgrades
data:
  image: busybox
  command: /bin/true
  net: none
  volumes:
    - /data
  labels:
    io.rancher.container.start_once: 'true'

# Discovery containers are used for bootstrapping a cluster.
# They will shutdown once this process is completed.
etcd-discovery:
  image: rancher/etcd:v2.3.0
  command: discovery_node
  labels:
    io.rancher.container.start_once: 'true'
    io.rancher.sidekicks: bootstrap
bootstrap:
  image: rancher/etcd:v2.3.0
  command: bootstrap ${REPLICAS}
  links:
    - etcd-discovery
  labels:
    io.rancher.container.start_once: 'true'